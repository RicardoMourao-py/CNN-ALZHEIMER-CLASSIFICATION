name: Backend Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente?'
        required: true
        default: 'Desenvolvimento'
        type: choice
        options:
          - Desenvolvimento
          - Homologação
          - Produção
      destroy:
        description: 'Destruir CF?'
        required: true
        default: 'False'
        type: choice
        options:
          - True
          - False

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      branch_key: ${{ github.event.inputs.environment == 'Desenvolvimento' && 'develop' || github.event.inputs.environment == 'Homologação' && 'homolog' || github.event.inputs.environment == 'Produção' && 'main' }}
      env_prefix: ${{ github.event.inputs.environment == 'Desenvolvimento' && 'dev' || github.event.inputs.environment == 'Homologação' && 'hmg' || github.event.inputs.environment == 'Produção' && 'prd' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Verify Environment
        run: |
          echo "Projeto: ${{ github.event.inputs.projectName }}"
          echo "Branch: ${{ github.ref }}"
          echo "Ambiente selecionado: ${{ env.env_prefix }}"
          echo "Destroy: ${{ github.event.inputs.destroy }}"
          if [ "${{ github.event.inputs.environment }}" == "Produção" ] && [ "${{ github.ref }}" != "refs/heads/main" ]; then 
            echo "Atenção: Produção obrigatoriamente precisa partir da branch main!"
            exit 1
          fi
      
      - name: Checkout KEYS GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Install Terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform

      - name: Plan Execution
        run: |
          echo "Template: $ENVTRIGGER"
          cp RicardoMourao-py/CNN-ALZHEIMER-CLASSIFICATION/terraform/*.tf RicardoMourao-py/CNN-ALZHEIMER-CLASSIFICATION/backend/
          cd RicardoMourao-py/CNN-ALZHEIMER-CLASSIFICATION/backend
          terraform init -backend-config=config/backend.gcs.tfbackend
          if [ "${{ github.event.inputs.destroy }}" == "False" ]; then
            echo "====== Plan - Create ======"
            terraform plan -var-file="config/${{ env.env_prefix }}.tfvars" -out=.terraform_tmp/plan.create -no-color
          else
            echo "====== Plan - Destroy ======"
            terraform plan -destroy -var-file="config/${{ env.env_prefix }}.tfvars" -out=.terraform_tmp/plan.destroy -no-color